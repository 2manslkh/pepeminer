{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EGGS_TO_HATCH_1MINERS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "airdropChickens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eth",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "contractBalance",
          "type": "uint256"
        }
      ],
      "name": "calculateChickenBuy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eth",
          "type": "uint256"
        }
      ],
      "name": "calculateChickenBuySimple",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chickens",
          "type": "uint256"
        }
      ],
      "name": "calculateChickenSell",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rs",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bs",
          "type": "uint256"
        }
      ],
      "name": "calculateTrade",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canAirdrop",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimedChickens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ref",
          "type": "address"
        }
      ],
      "name": "compound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ref",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "devFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "getChickensSinceLastHatch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHalvingPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyChickens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyMiners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hatcheryMiners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastHatch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketChickens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referrals",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedMarket",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopAirdrop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb1b6d69a90df886314ee978106fd62c85b73945fb1fdf55f264c4c586f558951",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1045118",
    "logsBloom": "0x
    "blockHash": "0x1063d4bd3b25d32c9194f52ca40820fccb69abf2f3528d18ad398f6f0e7e2f32",
    "transactionHash": "0xb1b6d69a90df886314ee978106fd62c85b73945fb1fdf55f264c4c586f558951",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1045118",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "92def5fc01c8d690054c045d30aa4135",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EGGS_TO_HATCH_1MINERS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"airdropChickens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"calculateChickenBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"calculateChickenBuySimple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chickens\",\"type\":\"uint256\"}],\"name\":\"calculateChickenSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bs\",\"type\":\"uint256\"}],\"name\":\"calculateTrade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canAirdrop\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedChickens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ref\",\"type\":\"address\"}],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ref\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"devFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getChickensSinceLastHatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHalvingPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyChickens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyMiners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hatcheryMiners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastHatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketChickens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PepeMiner.sol\":\"PepeMiner\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PepeMiner.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity ^0.8.12;\\n\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\\ncontract PepeMiner is ReentrancyGuard {\\n    uint256 public EGGS_TO_HATCH_1MINERS = 864000;\\n    uint256 PSN = 10000;\\n    uint256 PSNH = 5000;\\n    bool public initialized = false;\\n\\n    address public treasuryAddress;\\n    address owner;\\n\\n    mapping(address => uint256) public hatcheryMiners;\\n    mapping(address => uint256) public claimedChickens;\\n    mapping(address => uint256) public lastHatch;\\n    mapping(address => uint256) public lastWithdraw;\\n    mapping(address => address) public referrals;\\n\\n    uint256 constant HATCH_STEP = 1 days;\\n    uint256 constant HATCH_STEP_MODIFIER = 0.1e18;\\n    uint256 constant BASE_PERCENTAGE = 0.5e18;\\n\\n    uint256 public marketChickens;\\n\\n    bool public canAirdrop = true;\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"not owner\\\");\\n        _;\\n    }\\n\\n    constructor() {\\n        owner = msg.sender;\\n        treasuryAddress = address(0x420694bc7D762ba3Bc0784af0d87dbf63f2F266A);\\n    }\\n\\n    function stopAirdrop() public onlyOwner {\\n        canAirdrop = false;\\n    }\\n\\n    function airdropChickens(address[] memory addresses, uint256 _amount) public onlyOwner {\\n        require(canAirdrop, \\\"airdrop is stopped\\\");\\n\\n        for (uint256 i = 0; i < addresses.length; i++) {\\n            hatcheryMiners[addresses[i]] += _amount;\\n        }\\n\\n        marketChickens += (_amount * addresses.length);\\n    }\\n\\n    function compound(address ref) public nonReentrant {\\n        require(initialized);\\n        if (ref == msg.sender) {\\n            ref = address(0);\\n        }\\n        if (referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender) {\\n            referrals[msg.sender] = ref;\\n        }\\n        uint256 chickensUsed = getMyChickens();\\n\\n        uint256 newMiners = chickensUsed / EGGS_TO_HATCH_1MINERS;\\n        hatcheryMiners[msg.sender] += newMiners;\\n        claimedChickens[msg.sender] = 0;\\n        lastHatch[msg.sender] = block.timestamp;\\n\\n        //send referral chickens\\n        claimedChickens[referrals[msg.sender]] += chickensUsed / 10;\\n\\n        //boost market to nerf miners hoarding\\n        marketChickens += chickensUsed / 2;\\n    }\\n\\n    function withdraw() public nonReentrant {\\n        require(initialized);\\n        uint256 hasChickens = getMyChickens();\\n\\n        require(hasChickens > 0, \\\"no chickens\\\");\\n        uint256 chickenValue = calculateChickenSell(hasChickens);\\n        uint256 fee = devFee(chickenValue);\\n\\n        claimedChickens[msg.sender] = 0;\\n        lastHatch[msg.sender] = block.timestamp;\\n        lastWithdraw[msg.sender] = block.timestamp;\\n\\n        // boost market to nerf miners hoarding\\n        marketChickens += hasChickens;\\n\\n        payable(treasuryAddress).call{ value: fee }(\\\"\\\");\\n        payable(msg.sender).call{ value: chickenValue - fee }(\\\"\\\");\\n    }\\n\\n    function deposit(address ref) public payable {\\n        require(initialized, \\\"not initialized\\\");\\n\\n        uint256 chickensBought = calculateChickenBuy(msg.value, address(this).balance - msg.value);\\n\\n        chickensBought -= devFee(chickensBought);\\n        uint256 fee = devFee(msg.value);\\n\\n        payable(treasuryAddress).call{ value: fee }(\\\"\\\");\\n\\n        claimedChickens[msg.sender] += chickensBought;\\n\\n        compound(ref);\\n    }\\n\\n    //magic trade balancing algorithm\\n    function calculateTrade(uint256 rt, uint256 rs, uint256 bs) public view returns (uint256) {\\n        return (PSN * bs) / (PSNH + ((PSN * rs + PSNH * rt) / rt));\\n    }\\n\\n    function calculateChickenSell(uint256 chickens) public view returns (uint256) {\\n        if (chickens == 0) return 0;\\n        return calculateTrade(chickens, marketChickens, address(this).balance);\\n    }\\n\\n    function calculateChickenBuy(uint256 eth, uint256 contractBalance) public view returns (uint256) {\\n        return calculateTrade(eth, contractBalance, marketChickens);\\n    }\\n\\n    function calculateChickenBuySimple(uint256 eth) public view returns (uint256) {\\n        return calculateChickenBuy(eth, address(this).balance);\\n    }\\n\\n    function devFee(uint256 amount) public pure returns (uint256) {\\n        return (amount * 5) / 100;\\n    }\\n\\n    function seedMarket() public payable {\\n        require(marketChickens == 0);\\n        initialized = true;\\n        marketChickens = 86400000000;\\n    }\\n\\n    function getBalance() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function getMyMiners() public view returns (uint256) {\\n        return hatcheryMiners[msg.sender];\\n    }\\n\\n    function getMyChickens() public view returns (uint256) {\\n        return claimedChickens[msg.sender] + getChickensSinceLastHatch(msg.sender);\\n    }\\n\\n    function getChickensSinceLastHatch(address adr) public view returns (uint256) {\\n        uint256 steps = (block.timestamp - lastWithdraw[msg.sender]) / HATCH_STEP;\\n\\n        // the percentage is capped at 100%\\n        // it takes 1 day to reach 100% after a withdrawal\\n        uint256 percentage = min(1e18, BASE_PERCENTAGE + steps * HATCH_STEP_MODIFIER);\\n\\n        uint256 secondsPassed = min(EGGS_TO_HATCH_1MINERS, block.timestamp - lastHatch[adr]);\\n        return ((secondsPassed * hatcheryMiners[adr]) * percentage) / 1e18;\\n    }\\n\\n    function getHalvingPercentage() public view returns (uint256) {\\n        uint256 steps = (block.timestamp - lastWithdraw[msg.sender]) / HATCH_STEP;\\n\\n        return min(1e18, BASE_PERCENTAGE + steps * HATCH_STEP_MODIFIER);\\n    }\\n\\n    function min(uint256 a, uint256 b) private pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n}\\n\",\"keccak256\":\"0x0cadbd8a391400e431095b390899c9d1ee10587e3a1e35c8709cec9c77fd1479\",\"license\":\"Unlicensed\"}},\"version\":1}",
  "bytecode": "0x6080604052620d2f0060019081556127106002556113886003556004805460ff19908116909155600c8054909116909117905534801561003e57600080fd5b506001600055600580546001600160a01b031916331790556004805474420694bc7d762ba3bc0784af0d87dbf63f2f266a00610100600160a81b0319909116179055610f1c8061008f6000396000f3fe6080604052600436106101815760003560e01c8063624d7b72116100d1578063a4444f711161008a578063c342119811610064578063c342119814610470578063c5f956af14610485578063d34bfc28146104aa578063f340fa01146104bf57600080fd5b8063a4444f7114610403578063a48535e314610423578063b227b3cd1461045057600080fd5b8063624d7b721461030f57806367b1efaf1461033c57806379532aa91461035c5780637cdebc21146103895780638e7247f61461039f5780639ca423b3146103b557600080fd5b8063284dac231161013e5780633ccfd60b116101185780633ccfd60b14610298578063467ece79146102ad5780634b5bcc8e146102da5780634f4e47f1146102fa57600080fd5b8063284dac231461024e5780633bc0461a146102705780633c5f07cb1461029057600080fd5b80630a76e5ed1461018657806312065fe0146101b7578063158ef93e146101ca578063229824c4146101f45780632423cb47146102145780632531913514610234575b600080fd5b34801561019257600080fd5b50336000908152600660205260409020545b6040519081526020015b60405180910390f35b3480156101c357600080fd5b50476101a4565b3480156101d657600080fd5b506004546101e49060ff1681565b60405190151581526020016101ae565b34801561020057600080fd5b506101a461020f366004610cc3565b6104d2565b34801561022057600080fd5b506101a461022f366004610cef565b610532565b34801561024057600080fd5b50600c546101e49060ff1681565b34801561025a57600080fd5b5061026e610269366004610d24565b610544565b005b34801561027c57600080fd5b506101a461028b366004610cef565b6106b5565b61026e6106ce565b3480156102a457600080fd5b5061026e6106f3565b3480156102b957600080fd5b506101a46102c8366004610d24565b60086020526000908152604090205481565b3480156102e657600080fd5b506101a46102f5366004610d3f565b610873565b34801561030657600080fd5b5061026e610889565b34801561031b57600080fd5b506101a461032a366004610d24565b60096020526000908152604090205481565b34801561034857600080fd5b5061026e610357366004610d77565b6108db565b34801561036857600080fd5b506101a4610377366004610d24565b60066020526000908152604090205481565b34801561039557600080fd5b506101a460015481565b3480156103ab57600080fd5b506101a4600b5481565b3480156103c157600080fd5b506103eb6103d0366004610d24565b600a602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101ae565b34801561040f57600080fd5b506101a461041e366004610cef565b610a01565b34801561042f57600080fd5b506101a461043e366004610d24565b60076020526000908152604090205481565b34801561045c57600080fd5b506101a461046b366004610d24565b610a20565b34801561047c57600080fd5b506101a4610b02565b34801561049157600080fd5b506004546103eb9061010090046001600160a01b031681565b3480156104b657600080fd5b506101a4610b2c565b61026e6104cd366004610d24565b610b7d565b600083846003546104e39190610e58565b846002546104f19190610e58565b6104fb9190610e6f565b6105059190610e82565b6003546105129190610e6f565b826002546105209190610e58565b61052a9190610e82565b949350505050565b600061053e8247610873565b92915050565b61054c610c83565b60045460ff1661055b57600080fd5b336001600160a01b0382160361056f575060005b336000908152600a60205260409020546001600160a01b03161580156105ac5750336000818152600a60205260409020546001600160a01b031614155b156105da57336000908152600a6020526040902080546001600160a01b0319166001600160a01b0383161790555b60006105e4610b02565b90506000600154826105f69190610e82565b3360009081526006602052604081208054929350839290919061061a908490610e6f565b909155505033600090815260076020908152604080832083905560089091529020429055610649600a83610e82565b336000908152600a60209081526040808320546001600160a01b0316835260079091528120805490919061067e908490610e6f565b9091555061068f9050600283610e82565b600b60008282546106a09190610e6f565b90915550506001600055506106b29050565b50565b600060646106c4836005610e58565b61053e9190610e82565b600b54156106db57600080fd5b6004805460ff1916600117905564141dd76000600b55565b6106fb610c83565b60045460ff1661070a57600080fd5b6000610714610b02565b9050600081116107595760405162461bcd60e51b815260206004820152600b60248201526a6e6f20636869636b656e7360a81b60448201526064015b60405180910390fd5b600061076482610a01565b90506000610771826106b5565b3360009081526007602090815260408083208390556008825280832042908190556009909252822055600b805492935085929091906107b1908490610e6f565b90915550506004546040516101009091046001600160a01b031690829060006040518083038185875af1925050503d806000811461080b576040519150601f19603f3d011682016040523d82523d6000602084013e610810565b606091505b5033915061082090508284610ea4565b604051600081818185875af1925050503d806000811461085c576040519150601f19603f3d011682016040523d82523d6000602084013e610861565b606091505b5050505050506108716001600055565b565b60006108828383600b546104d2565b9392505050565b6005546001600160a01b031633146108cf5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610750565b600c805460ff19169055565b6005546001600160a01b031633146109215760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610750565b600c5460ff166109685760405162461bcd60e51b8152602060048201526012602482015271185a5c991c9bdc081a5cc81cdd1bdc1c195960721b6044820152606401610750565b60005b82518110156109da57816006600085848151811061098b5761098b610eb7565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546109c29190610e6f565b909155508190506109d281610ecd565b91505061096b565b5081516109e79082610e58565b600b60008282546109f89190610e6f565b90915550505050565b600081600003610a1357506000919050565b61053e82600b54476104d2565b3360009081526009602052604081205481906201518090610a419042610ea4565b610a4b9190610e82565b90506000610a84670de0b6b3a7640000610a6d67016345785d8a000085610e58565b610a7f906706f05b59d3b20000610e6f565b610cad565b6001546001600160a01b03861660009081526008602052604081205492935091610ab39190610a7f9042610ea4565b6001600160a01b038616600090815260066020526040902054909150670de0b6b3a7640000908390610ae59084610e58565b610aef9190610e58565b610af99190610e82565b95945050505050565b6000610b0d33610a20565b33600090815260076020526040902054610b279190610e6f565b905090565b3360009081526009602052604081205481906201518090610b4d9042610ea4565b610b579190610e82565b9050610b77670de0b6b3a7640000610a6d67016345785d8a000084610e58565b91505090565b60045460ff16610bc15760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd081a5b9a5d1a585b1a5e9959608a1b6044820152606401610750565b6000610bd1346102f58147610ea4565b9050610bdc816106b5565b610be69082610ea4565b90506000610bf3346106b5565b60045460405191925061010090046001600160a01b0316908290600081818185875af1925050503d8060008114610c46576040519150601f19603f3d011682016040523d82523d6000602084013e610c4b565b606091505b50503360009081526007602052604081208054859350909190610c6f908490610e6f565b90915550610c7e905083610544565b505050565b600260005403610ca657604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6000818310610cbc5781610882565b5090919050565b600080600060608486031215610cd857600080fd5b505081359360208301359350604090920135919050565b600060208284031215610d0157600080fd5b5035919050565b80356001600160a01b0381168114610d1f57600080fd5b919050565b600060208284031215610d3657600080fd5b61088282610d08565b60008060408385031215610d5257600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610d8a57600080fd5b823567ffffffffffffffff80821115610da257600080fd5b818501915085601f830112610db657600080fd5b8135602082821115610dca57610dca610d61565b8160051b604051601f19603f83011681018181108682111715610def57610def610d61565b604052928352818301935084810182019289841115610e0d57600080fd5b948201945b83861015610e3257610e2386610d08565b85529482019493820193610e12565b9997909101359750505050505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761053e5761053e610e42565b8082018082111561053e5761053e610e42565b600082610e9f57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561053e5761053e610e42565b634e487b7160e01b600052603260045260246000fd5b600060018201610edf57610edf610e42565b506001019056fea264697066735822122034276bb5c9442b0bd21a505d6ed1242cab158964ce1ad1a4db50d31ad7a6409464736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106101815760003560e01c8063624d7b72116100d1578063a4444f711161008a578063c342119811610064578063c342119814610470578063c5f956af14610485578063d34bfc28146104aa578063f340fa01146104bf57600080fd5b8063a4444f7114610403578063a48535e314610423578063b227b3cd1461045057600080fd5b8063624d7b721461030f57806367b1efaf1461033c57806379532aa91461035c5780637cdebc21146103895780638e7247f61461039f5780639ca423b3146103b557600080fd5b8063284dac231161013e5780633ccfd60b116101185780633ccfd60b14610298578063467ece79146102ad5780634b5bcc8e146102da5780634f4e47f1146102fa57600080fd5b8063284dac231461024e5780633bc0461a146102705780633c5f07cb1461029057600080fd5b80630a76e5ed1461018657806312065fe0146101b7578063158ef93e146101ca578063229824c4146101f45780632423cb47146102145780632531913514610234575b600080fd5b34801561019257600080fd5b50336000908152600660205260409020545b6040519081526020015b60405180910390f35b3480156101c357600080fd5b50476101a4565b3480156101d657600080fd5b506004546101e49060ff1681565b60405190151581526020016101ae565b34801561020057600080fd5b506101a461020f366004610cc3565b6104d2565b34801561022057600080fd5b506101a461022f366004610cef565b610532565b34801561024057600080fd5b50600c546101e49060ff1681565b34801561025a57600080fd5b5061026e610269366004610d24565b610544565b005b34801561027c57600080fd5b506101a461028b366004610cef565b6106b5565b61026e6106ce565b3480156102a457600080fd5b5061026e6106f3565b3480156102b957600080fd5b506101a46102c8366004610d24565b60086020526000908152604090205481565b3480156102e657600080fd5b506101a46102f5366004610d3f565b610873565b34801561030657600080fd5b5061026e610889565b34801561031b57600080fd5b506101a461032a366004610d24565b60096020526000908152604090205481565b34801561034857600080fd5b5061026e610357366004610d77565b6108db565b34801561036857600080fd5b506101a4610377366004610d24565b60066020526000908152604090205481565b34801561039557600080fd5b506101a460015481565b3480156103ab57600080fd5b506101a4600b5481565b3480156103c157600080fd5b506103eb6103d0366004610d24565b600a602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101ae565b34801561040f57600080fd5b506101a461041e366004610cef565b610a01565b34801561042f57600080fd5b506101a461043e366004610d24565b60076020526000908152604090205481565b34801561045c57600080fd5b506101a461046b366004610d24565b610a20565b34801561047c57600080fd5b506101a4610b02565b34801561049157600080fd5b506004546103eb9061010090046001600160a01b031681565b3480156104b657600080fd5b506101a4610b2c565b61026e6104cd366004610d24565b610b7d565b600083846003546104e39190610e58565b846002546104f19190610e58565b6104fb9190610e6f565b6105059190610e82565b6003546105129190610e6f565b826002546105209190610e58565b61052a9190610e82565b949350505050565b600061053e8247610873565b92915050565b61054c610c83565b60045460ff1661055b57600080fd5b336001600160a01b0382160361056f575060005b336000908152600a60205260409020546001600160a01b03161580156105ac5750336000818152600a60205260409020546001600160a01b031614155b156105da57336000908152600a6020526040902080546001600160a01b0319166001600160a01b0383161790555b60006105e4610b02565b90506000600154826105f69190610e82565b3360009081526006602052604081208054929350839290919061061a908490610e6f565b909155505033600090815260076020908152604080832083905560089091529020429055610649600a83610e82565b336000908152600a60209081526040808320546001600160a01b0316835260079091528120805490919061067e908490610e6f565b9091555061068f9050600283610e82565b600b60008282546106a09190610e6f565b90915550506001600055506106b29050565b50565b600060646106c4836005610e58565b61053e9190610e82565b600b54156106db57600080fd5b6004805460ff1916600117905564141dd76000600b55565b6106fb610c83565b60045460ff1661070a57600080fd5b6000610714610b02565b9050600081116107595760405162461bcd60e51b815260206004820152600b60248201526a6e6f20636869636b656e7360a81b60448201526064015b60405180910390fd5b600061076482610a01565b90506000610771826106b5565b3360009081526007602090815260408083208390556008825280832042908190556009909252822055600b805492935085929091906107b1908490610e6f565b90915550506004546040516101009091046001600160a01b031690829060006040518083038185875af1925050503d806000811461080b576040519150601f19603f3d011682016040523d82523d6000602084013e610810565b606091505b5033915061082090508284610ea4565b604051600081818185875af1925050503d806000811461085c576040519150601f19603f3d011682016040523d82523d6000602084013e610861565b606091505b5050505050506108716001600055565b565b60006108828383600b546104d2565b9392505050565b6005546001600160a01b031633146108cf5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610750565b600c805460ff19169055565b6005546001600160a01b031633146109215760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610750565b600c5460ff166109685760405162461bcd60e51b8152602060048201526012602482015271185a5c991c9bdc081a5cc81cdd1bdc1c195960721b6044820152606401610750565b60005b82518110156109da57816006600085848151811061098b5761098b610eb7565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546109c29190610e6f565b909155508190506109d281610ecd565b91505061096b565b5081516109e79082610e58565b600b60008282546109f89190610e6f565b90915550505050565b600081600003610a1357506000919050565b61053e82600b54476104d2565b3360009081526009602052604081205481906201518090610a419042610ea4565b610a4b9190610e82565b90506000610a84670de0b6b3a7640000610a6d67016345785d8a000085610e58565b610a7f906706f05b59d3b20000610e6f565b610cad565b6001546001600160a01b03861660009081526008602052604081205492935091610ab39190610a7f9042610ea4565b6001600160a01b038616600090815260066020526040902054909150670de0b6b3a7640000908390610ae59084610e58565b610aef9190610e58565b610af99190610e82565b95945050505050565b6000610b0d33610a20565b33600090815260076020526040902054610b279190610e6f565b905090565b3360009081526009602052604081205481906201518090610b4d9042610ea4565b610b579190610e82565b9050610b77670de0b6b3a7640000610a6d67016345785d8a000084610e58565b91505090565b60045460ff16610bc15760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd081a5b9a5d1a585b1a5e9959608a1b6044820152606401610750565b6000610bd1346102f58147610ea4565b9050610bdc816106b5565b610be69082610ea4565b90506000610bf3346106b5565b60045460405191925061010090046001600160a01b0316908290600081818185875af1925050503d8060008114610c46576040519150601f19603f3d011682016040523d82523d6000602084013e610c4b565b606091505b50503360009081526007602052604081208054859350909190610c6f908490610e6f565b90915550610c7e905083610544565b505050565b600260005403610ca657604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6000818310610cbc5781610882565b5090919050565b600080600060608486031215610cd857600080fd5b505081359360208301359350604090920135919050565b600060208284031215610d0157600080fd5b5035919050565b80356001600160a01b0381168114610d1f57600080fd5b919050565b600060208284031215610d3657600080fd5b61088282610d08565b60008060408385031215610d5257600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610d8a57600080fd5b823567ffffffffffffffff80821115610da257600080fd5b818501915085601f830112610db657600080fd5b8135602082821115610dca57610dca610d61565b8160051b604051601f19603f83011681018181108682111715610def57610def610d61565b604052928352818301935084810182019289841115610e0d57600080fd5b948201945b83861015610e3257610e2386610d08565b85529482019493820193610e12565b9997909101359750505050505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761053e5761053e610e42565b8082018082111561053e5761053e610e42565b600082610e9f57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561053e5761053e610e42565b634e487b7160e01b600052603260045260246000fd5b600060018201610edf57610edf610e42565b506001019056fea264697066735822122034276bb5c9442b0bd21a505d6ed1242cab158964ce1ad1a4db50d31ad7a6409464736f6c63430008110033",
  "devdoc": {
    "errors": {
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 72,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "EGGS_TO_HATCH_1MINERS",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 75,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "PSN",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 78,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "PSNH",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 81,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "initialized",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 83,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "treasuryAddress",
        "offset": 1,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 85,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 89,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "hatcheryMiners",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 93,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "claimedChickens",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 97,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "lastHatch",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 101,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "lastWithdraw",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 105,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "referrals",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 116,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "marketChickens",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 119,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "canAirdrop",
        "offset": 0,
        "slot": "12",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}