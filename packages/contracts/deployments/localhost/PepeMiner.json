{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EGGS_TO_HATCH_1MINERS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "airdropChickens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eth",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "contractBalance",
          "type": "uint256"
        }
      ],
      "name": "calculateChickenBuy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eth",
          "type": "uint256"
        }
      ],
      "name": "calculateChickenBuySimple",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chickens",
          "type": "uint256"
        }
      ],
      "name": "calculateChickenSell",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rs",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bs",
          "type": "uint256"
        }
      ],
      "name": "calculateTrade",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canAirdrop",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimedChickens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ref",
          "type": "address"
        }
      ],
      "name": "compound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ref",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "devFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "getChickensSinceLastHatch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHalvingPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyChickens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyMiners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hatcheryMiners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastHatch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketChickens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referrals",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedMarket",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopAirdrop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfda2c92c7f3e802192d452b13eea3d975de5346f2664ce078f9f0cf1c33ca8c8",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1057855",
    "logsBloom": "0x
    "blockHash": "0x27ea07994cd70da15990994d5263de3108877d333fe877ef4f34c1e57282d09d",
    "transactionHash": "0xfda2c92c7f3e802192d452b13eea3d975de5346f2664ce078f9f0cf1c33ca8c8",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1057855",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9047b9a9721592dc72ccd818d919a0b7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EGGS_TO_HATCH_1MINERS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"airdropChickens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"calculateChickenBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"calculateChickenBuySimple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chickens\",\"type\":\"uint256\"}],\"name\":\"calculateChickenSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bs\",\"type\":\"uint256\"}],\"name\":\"calculateTrade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canAirdrop\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedChickens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ref\",\"type\":\"address\"}],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ref\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"devFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getChickensSinceLastHatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHalvingPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyChickens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyMiners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hatcheryMiners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastHatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketChickens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PepeMiner.sol\":\"PepeMiner\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PepeMiner.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity ^0.8.12;\\n\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\\ncontract PepeMiner is ReentrancyGuard {\\n    uint256 public EGGS_TO_HATCH_1MINERS = 864000;\\n    uint256 PSN = 10000;\\n    uint256 PSNH = 5000;\\n    bool public initialized = false;\\n\\n    address public treasuryAddress;\\n    address public owner;\\n\\n    mapping(address => uint256) public hatcheryMiners;\\n    mapping(address => uint256) public claimedChickens;\\n    mapping(address => uint256) public lastHatch;\\n    mapping(address => uint256) public lastWithdraw;\\n    mapping(address => address) public referrals;\\n\\n    uint256 constant HATCH_STEP = 1 days;\\n    uint256 constant HATCH_STEP_MODIFIER = 0.1e18;\\n    uint256 constant BASE_PERCENTAGE = 0.5e18;\\n\\n    uint256 public marketChickens;\\n\\n    bool public canAirdrop = true;\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"not owner\\\");\\n        _;\\n    }\\n\\n    constructor() {\\n        owner = msg.sender;\\n        treasuryAddress = address(0x420694bc7D762ba3Bc0784af0d87dbf63f2F266A);\\n    }\\n\\n    function stopAirdrop() public onlyOwner {\\n        canAirdrop = false;\\n    }\\n\\n    function airdropChickens(address[] memory addresses, uint256 _amount) public onlyOwner {\\n        require(canAirdrop, \\\"airdrop is stopped\\\");\\n\\n        for (uint256 i = 0; i < addresses.length; i++) {\\n            hatcheryMiners[addresses[i]] += _amount;\\n        }\\n\\n        marketChickens += (_amount * addresses.length);\\n    }\\n\\n    function compound(address ref) public nonReentrant {\\n        require(initialized);\\n        if (ref == msg.sender) {\\n            ref = address(0);\\n        }\\n        if (referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender) {\\n            referrals[msg.sender] = ref;\\n        }\\n        uint256 chickensUsed = getMyChickens();\\n\\n        uint256 newMiners = chickensUsed / EGGS_TO_HATCH_1MINERS;\\n        hatcheryMiners[msg.sender] += newMiners;\\n        claimedChickens[msg.sender] = 0;\\n        lastHatch[msg.sender] = block.timestamp;\\n\\n        //send referral chickens\\n        claimedChickens[referrals[msg.sender]] += chickensUsed / 10;\\n\\n        //boost market to nerf miners hoarding\\n        marketChickens += chickensUsed / 2;\\n    }\\n\\n    function withdraw() public nonReentrant {\\n        require(initialized);\\n        uint256 hasChickens = getMyChickens();\\n\\n        require(hasChickens > 0, \\\"no chickens\\\");\\n        uint256 chickenValue = calculateChickenSell(hasChickens);\\n        uint256 fee = devFee(chickenValue);\\n\\n        claimedChickens[msg.sender] = 0;\\n        lastHatch[msg.sender] = block.timestamp;\\n        lastWithdraw[msg.sender] = block.timestamp;\\n\\n        // boost market to nerf miners hoarding\\n        marketChickens += hasChickens;\\n\\n        payable(treasuryAddress).call{ value: fee }(\\\"\\\");\\n        payable(msg.sender).call{ value: chickenValue - fee }(\\\"\\\");\\n    }\\n\\n    function deposit(address ref) public payable {\\n        require(initialized, \\\"not initialized\\\");\\n\\n        uint256 chickensBought = calculateChickenBuy(msg.value, address(this).balance - msg.value);\\n\\n        chickensBought -= devFee(chickensBought);\\n        uint256 fee = devFee(msg.value);\\n\\n        payable(treasuryAddress).call{ value: fee }(\\\"\\\");\\n\\n        claimedChickens[msg.sender] += chickensBought;\\n\\n        compound(ref);\\n    }\\n\\n    //magic trade balancing algorithm\\n    function calculateTrade(uint256 rt, uint256 rs, uint256 bs) public view returns (uint256) {\\n        return (PSN * bs) / (PSNH + ((PSN * rs + PSNH * rt) / rt));\\n    }\\n\\n    function calculateChickenSell(uint256 chickens) public view returns (uint256) {\\n        if (chickens == 0) return 0;\\n        return calculateTrade(chickens, marketChickens, address(this).balance);\\n    }\\n\\n    function calculateChickenBuy(uint256 eth, uint256 contractBalance) public view returns (uint256) {\\n        return calculateTrade(eth, contractBalance, marketChickens);\\n    }\\n\\n    function calculateChickenBuySimple(uint256 eth) public view returns (uint256) {\\n        return calculateChickenBuy(eth, address(this).balance);\\n    }\\n\\n    function devFee(uint256 amount) public pure returns (uint256) {\\n        return (amount * 5) / 100;\\n    }\\n\\n    function seedMarket() public payable {\\n        require(marketChickens == 0);\\n        initialized = true;\\n        marketChickens = 86400000000;\\n    }\\n\\n    function getBalance() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function getMyMiners() public view returns (uint256) {\\n        return hatcheryMiners[msg.sender];\\n    }\\n\\n    function getMyChickens() public view returns (uint256) {\\n        return claimedChickens[msg.sender] + getChickensSinceLastHatch(msg.sender);\\n    }\\n\\n    function getChickensSinceLastHatch(address adr) public view returns (uint256) {\\n        uint256 steps = (block.timestamp - lastWithdraw[msg.sender]) / HATCH_STEP;\\n\\n        // the percentage is capped at 100%\\n        // it takes 1 day to reach 100% after a withdrawal\\n        uint256 percentage = min(1e18, BASE_PERCENTAGE + steps * HATCH_STEP_MODIFIER);\\n\\n        uint256 secondsPassed = min(EGGS_TO_HATCH_1MINERS, block.timestamp - lastHatch[adr]);\\n        return ((secondsPassed * hatcheryMiners[adr]) * percentage) / 1e18;\\n    }\\n\\n    function getHalvingPercentage() public view returns (uint256) {\\n        uint256 steps = (block.timestamp - lastWithdraw[msg.sender]) / HATCH_STEP;\\n\\n        return min(1e18, BASE_PERCENTAGE + steps * HATCH_STEP_MODIFIER);\\n    }\\n\\n    function min(uint256 a, uint256 b) private pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n}\\n\",\"keccak256\":\"0x43ed007642d0c4621a83a262d0b1681f69a0eecece938b6e627c8dc08bae3471\",\"license\":\"Unlicensed\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061019c5760003560e01c8063624d7b72116100ec578063a4444f711161008a578063c342119811610064578063c3421198146104ab578063c5f956af146104c0578063d34bfc28146104e5578063f340fa01146104fa57600080fd5b8063a4444f711461043e578063a48535e31461045e578063b227b3cd1461048b57600080fd5b80637cdebc21116100c65780637cdebc21146103a45780638da5cb5b146103ba5780638e7247f6146103f25780639ca423b31461040857600080fd5b8063624d7b721461032a57806367b1efaf1461035757806379532aa91461037757600080fd5b8063284dac23116101595780633ccfd60b116101335780633ccfd60b146102b3578063467ece79146102c85780634b5bcc8e146102f55780634f4e47f11461031557600080fd5b8063284dac23146102695780633bc0461a1461028b5780633c5f07cb146102ab57600080fd5b80630a76e5ed146101a157806312065fe0146101d2578063158ef93e146101e5578063229824c41461020f5780632423cb471461022f578063253191351461024f575b600080fd5b3480156101ad57600080fd5b50336000908152600660205260409020545b6040519081526020015b60405180910390f35b3480156101de57600080fd5b50476101bf565b3480156101f157600080fd5b506004546101ff9060ff1681565b60405190151581526020016101c9565b34801561021b57600080fd5b506101bf61022a366004610cfe565b61050d565b34801561023b57600080fd5b506101bf61024a366004610d2a565b61056d565b34801561025b57600080fd5b50600c546101ff9060ff1681565b34801561027557600080fd5b50610289610284366004610d5f565b61057f565b005b34801561029757600080fd5b506101bf6102a6366004610d2a565b6106f0565b610289610709565b3480156102bf57600080fd5b5061028961072e565b3480156102d457600080fd5b506101bf6102e3366004610d5f565b60086020526000908152604090205481565b34801561030157600080fd5b506101bf610310366004610d7a565b6108ae565b34801561032157600080fd5b506102896108c4565b34801561033657600080fd5b506101bf610345366004610d5f565b60096020526000908152604090205481565b34801561036357600080fd5b50610289610372366004610db2565b610916565b34801561038357600080fd5b506101bf610392366004610d5f565b60066020526000908152604090205481565b3480156103b057600080fd5b506101bf60015481565b3480156103c657600080fd5b506005546103da906001600160a01b031681565b6040516001600160a01b0390911681526020016101c9565b3480156103fe57600080fd5b506101bf600b5481565b34801561041457600080fd5b506103da610423366004610d5f565b600a602052600090815260409020546001600160a01b031681565b34801561044a57600080fd5b506101bf610459366004610d2a565b610a3c565b34801561046a57600080fd5b506101bf610479366004610d5f565b60076020526000908152604090205481565b34801561049757600080fd5b506101bf6104a6366004610d5f565b610a5b565b3480156104b757600080fd5b506101bf610b3d565b3480156104cc57600080fd5b506004546103da9061010090046001600160a01b031681565b3480156104f157600080fd5b506101bf610b67565b610289610508366004610d5f565b610bb8565b6000838460035461051e9190610e93565b8460025461052c9190610e93565b6105369190610eaa565b6105409190610ebd565b60035461054d9190610eaa565b8260025461055b9190610e93565b6105659190610ebd565b949350505050565b600061057982476108ae565b92915050565b610587610cbe565b60045460ff1661059657600080fd5b336001600160a01b038216036105aa575060005b336000908152600a60205260409020546001600160a01b03161580156105e75750336000818152600a60205260409020546001600160a01b031614155b1561061557336000908152600a6020526040902080546001600160a01b0319166001600160a01b0383161790555b600061061f610b3d565b90506000600154826106319190610ebd565b33600090815260066020526040812080549293508392909190610655908490610eaa565b909155505033600090815260076020908152604080832083905560089091529020429055610684600a83610ebd565b336000908152600a60209081526040808320546001600160a01b031683526007909152812080549091906106b9908490610eaa565b909155506106ca9050600283610ebd565b600b60008282546106db9190610eaa565b90915550506001600055506106ed9050565b50565b600060646106ff836005610e93565b6105799190610ebd565b600b541561071657600080fd5b6004805460ff1916600117905564141dd76000600b55565b610736610cbe565b60045460ff1661074557600080fd5b600061074f610b3d565b9050600081116107945760405162461bcd60e51b815260206004820152600b60248201526a6e6f20636869636b656e7360a81b60448201526064015b60405180910390fd5b600061079f82610a3c565b905060006107ac826106f0565b3360009081526007602090815260408083208390556008825280832042908190556009909252822055600b805492935085929091906107ec908490610eaa565b90915550506004546040516101009091046001600160a01b031690829060006040518083038185875af1925050503d8060008114610846576040519150601f19603f3d011682016040523d82523d6000602084013e61084b565b606091505b5033915061085b90508284610edf565b604051600081818185875af1925050503d8060008114610897576040519150601f19603f3d011682016040523d82523d6000602084013e61089c565b606091505b5050505050506108ac6001600055565b565b60006108bd8383600b5461050d565b9392505050565b6005546001600160a01b0316331461090a5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640161078b565b600c805460ff19169055565b6005546001600160a01b0316331461095c5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640161078b565b600c5460ff166109a35760405162461bcd60e51b8152602060048201526012602482015271185a5c991c9bdc081a5cc81cdd1bdc1c195960721b604482015260640161078b565b60005b8251811015610a155781600660008584815181106109c6576109c6610ef2565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546109fd9190610eaa565b90915550819050610a0d81610f08565b9150506109a6565b508151610a229082610e93565b600b6000828254610a339190610eaa565b90915550505050565b600081600003610a4e57506000919050565b61057982600b544761050d565b3360009081526009602052604081205481906201518090610a7c9042610edf565b610a869190610ebd565b90506000610abf670de0b6b3a7640000610aa867016345785d8a000085610e93565b610aba906706f05b59d3b20000610eaa565b610ce8565b6001546001600160a01b03861660009081526008602052604081205492935091610aee9190610aba9042610edf565b6001600160a01b038616600090815260066020526040902054909150670de0b6b3a7640000908390610b209084610e93565b610b2a9190610e93565b610b349190610ebd565b95945050505050565b6000610b4833610a5b565b33600090815260076020526040902054610b629190610eaa565b905090565b3360009081526009602052604081205481906201518090610b889042610edf565b610b929190610ebd565b9050610bb2670de0b6b3a7640000610aa867016345785d8a000084610e93565b91505090565b60045460ff16610bfc5760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd081a5b9a5d1a585b1a5e9959608a1b604482015260640161078b565b6000610c0c346103108147610edf565b9050610c17816106f0565b610c219082610edf565b90506000610c2e346106f0565b60045460405191925061010090046001600160a01b0316908290600081818185875af1925050503d8060008114610c81576040519150601f19603f3d011682016040523d82523d6000602084013e610c86565b606091505b50503360009081526007602052604081208054859350909190610caa908490610eaa565b90915550610cb990508361057f565b505050565b600260005403610ce157604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6000818310610cf757816108bd565b5090919050565b600080600060608486031215610d1357600080fd5b505081359360208301359350604090920135919050565b600060208284031215610d3c57600080fd5b5035919050565b80356001600160a01b0381168114610d5a57600080fd5b919050565b600060208284031215610d7157600080fd5b6108bd82610d43565b60008060408385031215610d8d57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610dc557600080fd5b823567ffffffffffffffff80821115610ddd57600080fd5b818501915085601f830112610df157600080fd5b8135602082821115610e0557610e05610d9c565b8160051b604051601f19603f83011681018181108682111715610e2a57610e2a610d9c565b604052928352818301935084810182019289841115610e4857600080fd5b948201945b83861015610e6d57610e5e86610d43565b85529482019493820193610e4d565b9997909101359750505050505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761057957610579610e7d565b8082018082111561057957610579610e7d565b600082610eda57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561057957610579610e7d565b634e487b7160e01b600052603260045260246000fd5b600060018201610f1a57610f1a610e7d565b506001019056fea2646970667358221220e4d1689937be8665f904b6aec3417dd19caf96feb346976cfeb99f973ca3e62064736f6c63430008110033",
  "devdoc": {
    "errors": {
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 72,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "EGGS_TO_HATCH_1MINERS",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 75,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "PSN",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 78,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "PSNH",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 81,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "initialized",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 83,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "treasuryAddress",
        "offset": 1,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 85,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 89,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "hatcheryMiners",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 93,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "claimedChickens",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 97,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "lastHatch",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 101,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "lastWithdraw",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 105,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "referrals",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 116,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "marketChickens",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 119,
        "contract": "contracts/PepeMiner.sol:PepeMiner",
        "label": "canAirdrop",
        "offset": 0,
        "slot": "12",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}